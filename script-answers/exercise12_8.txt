Step 1: Run MongoDB:

    docker compose -f ./todo-app/todo-backend/docker-compose.dev.yml up

Open another terminal and run:

    MONGO_URL=mongodb://the_username:the_password@localhost:3456/the_database npm run dev

Step 2: Use docker exec to get inside the container. Before that, find out the currently running container's id:

    docker ps

Then, run the following command:

    docker exec -it <container-name-or-id> bash

Step 3: Open Mongo cli

    mongosh -u root -p example

When you have connected to the Mongo cli you can ask it to show dbs inside:

    test> show dbs
        admin         100.00 KiB
        config         60.00 KiB
        local          72.00 KiB
        the_database   72.00 KiB

To access the correct database:

    test> use the_database
    switched to db the_database
    the_database>

And finally to find out the collections:

    the_database> show collections
    todos

Now access the data in those collections:

    the_database> db.todos.find({})
        [
        {
            _id: ObjectId("64c103837600107248d5a3aa"),
            text: 'Write code',
            done: true
        },
        {
            _id: ObjectId("64c103837600107248d5a3ab"),
            text: 'Learn about containers',
            done: true
        },
        {
            _id: ObjectId("64c1090327e152b18911f735"),
            text: 'set counter to: 2',
            done: false,
            __v: 0
        }
        ]
    
Insert one new todo with the text: "Increase the number of tools in my toolbelt" with status done as false:

    the_database> db.todos.insertOne({text: "Increase the number of tools in my toolbelt", done: false})

Ensure that you see the new todo both in the Express app and when querying from Mongo CLI:

    the_database> db.todos.find({})
        [
            {
                _id: ObjectId("64c103837600107248d5a3aa"),
                text: 'Write code',
                done: true
            },
            {
                _id: ObjectId("64c103837600107248d5a3ab"),
                text: 'Learn about containers',
                done: true
            },
            {
                _id: ObjectId("64c1090327e152b18911f735"),
                text: 'set counter to: 2',
                done: false,
                __v: 0
            },
            {
                _id: ObjectId("64c10bbbbd423d41abba2bf5"),
                text: 'Increase the number of tools in my toolbelt',
                done: false
            }
        ]

Exit the database, and the container:

    the_database> exit
    root@bb9b8de4ed20:/# exit
    exit